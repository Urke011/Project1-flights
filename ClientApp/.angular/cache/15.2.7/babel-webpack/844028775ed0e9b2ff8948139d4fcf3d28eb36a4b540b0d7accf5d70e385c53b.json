{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.currentuser) this.router.navigate(['/register-passenger', {\n      requestedUrl: state.url\n    }]);\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAE5D;EACAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,WAAW,EAC/B,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,qBAAqB,EAAE;MAACC,YAAY,EAAEH,KAAK,CAACI;IAAG,CAAC,CAAC,CAAC;IAE1E,OAAO,IAAI;EACb;;AAbWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","currentuser","navigate","requestedUrl","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\urajkovic\\Desktop\\csharpApp\\Project1\\ClientApp\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if (!this.authService.currentuser)\r\n      this.router.navigate(['/register-passenger', {requestedUrl: state.url}])\r\n\r\n    return true;\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}